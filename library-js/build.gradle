apply plugin: 'kotlin2js'
apply plugin: 'org.jetbrains.kotlin.frontend'

compileKotlin2Js {
    kotlinOptions.metaInfo = true
    kotlinOptions.outputFile = "$project.buildDir.path/js/${project.name}.js"
    kotlinOptions.sourceMap = true
    kotlinOptions.moduleKind = 'umd'
    kotlinOptions.main = "call"
}

kotlinFrontend {
    downloadNodeJsVersion = "$node_version"
    
    webpackBundle {
        bundleName = "main"
        contentPath = file('web')
    }
}

sourceSets {
    main {
        kotlin.srcDirs += "src"
        resources.srcDirs += "resources"
        output.resourcesDir = "build/js/min/"
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-js"
    implementation project(':library')
}

task assembleWeb(type: Sync) {
    configurations.compile.each { File file ->
        from(zipTree(file.absolutePath), {
            includeEmptyDirs = false
            include { fileTreeElement ->
                def path = fileTreeElement.path
                path.endsWith(".js") && (path.startsWith("META-INF/resources/") ||
                        !path.startsWith("META-INF/"))
            }
        })
    }
    from compileKotlin2Js.destinationDir
    into "${projectDir}/web"

    dependsOn classes
}

assemble.dependsOn assembleWeb