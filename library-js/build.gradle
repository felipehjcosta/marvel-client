apply plugin: "com.moowork.node"
apply plugin: 'kotlin2js'

compileKotlin2Js {
    kotlinOptions.metaInfo = true
    kotlinOptions.sourceMap = true
    kotlinOptions.suppressWarnings = true
    kotlinOptions.verbose = true
    kotlinOptions.main = "call"
    kotlinOptions.moduleKind = "umd"
}

def outputDir = "${projectDir}/node_modules"

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-js"
    implementation project(':library')
}

task assembleJs(type: Sync) {
    configurations.runtimeClasspath.each { File file ->
        from(zipTree(file.absolutePath), {
            includeEmptyDirs = false
            include { fileTreeElement ->
                def path = fileTreeElement.path
                path.endsWith(".js") && (path.startsWith("META-INF/resources/") ||
                        !path.startsWith("META-INF/"))
            }
        })
    }
    from compileKotlin2Js.destinationDir
    into "${outputDir}"
    dependsOn classes
}

// wont be needed once https://github.com/ktorio/ktor/issues/961 is fixed
task installTextEncode(type: NpmTask, dependsOn: [npmInstall]) {
    // install the text-encoding package only
    args = ['install', 'text-encoding']
}

task webpack(type: NodeTask, dependsOn: [npmInstall, installTextEncode]) {
    script = file("$projectDir/node_modules/webpack/bin/webpack")
}

assemble.dependsOn assembleJs
webpack.dependsOn assemble

node {
    version = "$node_version"
    download = false
}

clean.doFirst() {
    delete "$outputDir"
}